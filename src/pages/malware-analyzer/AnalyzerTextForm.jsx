import { useState } from "react";
import PropTypes from "prop-types";
import Button from "@mui/material/Button";
import Stack from "@mui/material/Stack";
import TextField from "@mui/material/TextField";
import { useCallback } from "react";
import { isValidCID } from "../../libs/utils/ipfs.helpers";
import { FormErrors } from "../../components/molecules/formErrors";

export function AnalyzerTextForm({ onSubmit }) {
  const [formErrors, setFormErrors] = useState({});
  const handleSubmit = useCallback(
    (e) => {
      e.preventDefault();
      const cid = new FormData(e.target).get("cid");

      if (isValidCID(cid)) {
        onSubmit(cid);
      } else {
        setFormErrors({ cid: "Not a valid CID" });
      }
    },
    [onSubmit]
  );

  return (
    <form onSubmit={handleSubmit} onChange={() => setFormErrors({})}>
      <Stack direction="column" spacing={2} alignItems="flex-start">
        <TextField
          name="cid"
          type="text"
          label="CID"
          fullWidth
          placeholder="Enter CID"
        />
        <FormErrors errors={formErrors} />
        <Button variant="contained" color="primary" type="submit">
          Submit
        </Button>
      </Stack>
    </form>
  );
}

AnalyzerTextForm.propTypes = {
  onSubmit: PropTypes.func.isRequired,
};
