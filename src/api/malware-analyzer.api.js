import axios from "axios";
// import { analyzerHttpClient } from "../libs/axios";

export async function analyzeCID({ cid, userId }) {
  return axios.post(
    `https://large-field-analyzer.deanlaughing.workers.dev/upload`,
    {
      ipfsCID: cid,
      type: "cid",
    },
    {
      headers: {
        "Content-Type": "application/json",
        Authorization: `${userId}`,
      },
    }
  );
}

export async function analyzeFile(file, userId) {
  if (!(file instanceof File)) {
    throw new Error("The provided 'file' is not a valid File object.");
  }

  // Ensure userId is present
  if (!userId) {
    throw new Error("No user ID provided");
  }

  const formData = new FormData();
  formData.append("file", file);

  try {
    const response = await axios.post(
      `https://winter-surf-82a0.deanlaughing.workers.dev/upload`,
      formData,
      {
        headers: {
          'X-Custom-Auth-Key': 'nyXLsZj14dLgQ9Re',
          'X-UserId': userId, // Use 'X-UserId' to match the header expected by the Cloudflare worker
          // 'Content-Type': 'multipart/form-data' is not needed here, axios sets it automatically with the correct boundary when FormData is used
        },
      }
    );
    return response.data;
  } catch (error) {
    console.error("Error uploading file to Cloudflare Worker:", error);
    throw error; // Or handle the error as needed for your UI
  }
}

export async function fetchAnalyzedCIDs(userId) {
  userId = encodeURIComponent(userId);
  return fetch(
    `https://ui-query.deanlaughing.workers.dev/action/find?userId=${userId}`,
    {
      mode: "cors",
      headers: {
        "Content-Type": "application/json",
      },
    }
  ).then((res) => {
    if (res.ok) return res.json();
    throw new Error("Failed to fetch analyzed CIDs");
  });
}
